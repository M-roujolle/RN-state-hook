{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Frede\\\\Desktop\\\\correction\\\\src\\\\components\\\\LikeBtn.js\";\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { IconButton } from 'react-native-paper';\n\nvar LikeBtn = function LikeBtn(props) {\n  var likes = props.likes;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      liked = _useState2[0],\n      setLiked = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLiked = _useState4[0],\n      setIsLiked = _useState4[1];\n\n  var incrementLike = function incrementLike(like) {\n    if (isLiked == false) {\n      like++;\n      setLiked(like);\n      setIsLiked(true);\n    } else {\n      like--;\n      setLiked(like);\n      setIsLiked(false);\n    }\n  };\n\n  useEffect(function () {\n    setLiked(likes);\n  }, []);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(IconButton, {\n    icon: !isLiked ? \"heart-outline\" : \"heart\",\n    color: \"#2699FB\",\n    size: 20,\n    animated: true,\n    onPress: function onPress() {\n      return incrementLike(liked);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.like,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, liked));\n};\n\nexport default LikeBtn;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'flex-end'\n  },\n  like: {\n    color: \"#2699FB\",\n    fontSize: 19,\n    fontWeight: 'bold',\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Frede/Desktop/correction/src/components/LikeBtn.js"],"names":["React","useEffect","useState","useRef","IconButton","LikeBtn","props","likes","liked","setLiked","isLiked","setIsLiked","incrementLike","like","styles","container","StyleSheet","create","flex","flexDirection","justifyContent","color","fontSize","fontWeight","alignSelf"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,MAArC,QAAmD,OAAnD;;;;AAEA,SAASC,UAAT,QAA2B,oBAA3B;;AAGA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAW;AAGvB,MACIC,KADJ,GAEID,KAFJ,CACIC,KADJ;;AAOA,kBAA0BL,QAAQ,CAAC,CAAD,CAAlC;AAAA;AAAA,MAAOM,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAA8BP,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOQ,OAAP;AAAA,MAAgBC,UAAhB;;AAGA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AAE5B,QAAGH,OAAO,IAAI,KAAd,EAAoB;AAEhBG,MAAAA,IAAI;AAEJJ,MAAAA,QAAQ,CAACI,IAAD,CAAR;AACAF,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAND,MAMK;AAEDE,MAAAA,IAAI;AAEJJ,MAAAA,QAAQ,CAACI,IAAD,CAAR;AACAF,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;AACJ,GAfD;;AAkBAV,EAAAA,SAAS,CAAC,YAAM;AAEZQ,IAAAA,QAAQ,CAACF,KAAD,CAAR;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEO,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,UAAD;AACI,IAAA,IAAI,EAAE,CAACL,OAAD,GAAW,eAAX,GAA6B,OADvC;AAEI,IAAA,KAAK,EAAC,SAFV;AAGI,IAAA,IAAI,EAAE,EAHV;AAII,IAAA,QAAQ,EAAE,IAJd;AAKI,IAAA,OAAO,EAAE;AAAA,aAAME,aAAa,CAACJ,KAAD,CAAnB;AAAA,KALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAUI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEM,MAAM,CAACD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BL,KAA3B,CAVJ,CADJ;AAcH,CAnDD;;AAoDA,eAAeH,OAAf;AAEA,IAAMS,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACPG,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,aAAa,EAAE,KAFR;AAGPC,IAAAA,cAAc,EAAE;AAHT,GADkB;AAM7BP,EAAAA,IAAI,EAAE;AACFQ,IAAAA,KAAK,EAAE,SADL;AAEFC,IAAAA,QAAQ,EAAE,EAFR;AAGFC,IAAAA,UAAU,EAAE,MAHV;AAIFC,IAAAA,SAAS,EAAE;AAJT;AANuB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\r\nimport { View, Text, StyleSheet } from 'react-native'\r\nimport { IconButton } from 'react-native-paper';\r\n\r\n//Je crée mon Component Fonction qui prend en paramètre les props que j'ai passé depuis le component Parent \"CardFooter\"\r\nconst LikeBtn = (props) => {\r\n\r\n    //Je desctructure mon tableau de props pour récupérer chaque index de ce dernier.\r\n    const {\r\n        likes\r\n    } = props\r\n\r\n    //J'initialise 2 state :\r\n    // -liked initialisé à zéro\r\n    // -isLiked initialisé à false\r\n    const [liked, setLiked] = useState(0)\r\n    const [isLiked, setIsLiked] = useState(false)\r\n\r\n    //je crée une fonction qui me permettra d'incrementer ou de décrémenter suivant l'état \"isLiked\"\r\n    const incrementLike = (like) => {\r\n        //Si isLiked est égale a false\r\n        if(isLiked == false){\r\n            //Alors j'incrémente la variable like\r\n            like++\r\n            //Je met a jour mon state Liked avec la nouvelle valeur incrémenter et isLiked à true\r\n            setLiked(like)\r\n            setIsLiked(true)\r\n        }else{\r\n            //Sinon je décrémente la variable like\r\n            like--\r\n            //Je met a jour mon state Liked avec la nouvelle valeur incrémenter et isLiked à false\r\n            setLiked(like)\r\n            setIsLiked(false)\r\n        }\r\n    }\r\n\r\n    //J'utilise le Hook useEffect pour donner un état au moment du premier rendu de la vue (componentDidMount)\r\n    useEffect(() => {\r\n        //Je met a jour mon state liked avec la valeur du props \"likes\"\r\n        setLiked(likes)\r\n    }, [])\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            {/* Je crée mon icone si isLiked == true j'affiche grâçe a ma ternaire une icone sinon j'en affiche une autre */}\r\n            <IconButton\r\n                icon={!isLiked ? \"heart-outline\" : \"heart\"}\r\n                color=\"#2699FB\"\r\n                size={20}\r\n                animated={true}\r\n                onPress={() => incrementLike(liked)}\r\n            />\r\n            {/* J'affiche le nombres de like dans un text */}\r\n            <Text style={styles.like}>{liked}</Text>\r\n        </View>\r\n    )\r\n}\r\nexport default LikeBtn\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        justifyContent: 'flex-end'\r\n    },\r\n    like: {\r\n        color: \"#2699FB\",\r\n        fontSize: 19,\r\n        fontWeight: 'bold',\r\n        alignSelf: 'center'\r\n    }\r\n\r\n})"]},"metadata":{},"sourceType":"module"}